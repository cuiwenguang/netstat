// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cards.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	cards.proto
	dummy.proto
	entity.proto
	fourking.proto
	msg.proto
	rpc.proto

It has these top-level messages:
	Card
	Cards
	DMM
	Player
	ChatMsg
	SK4
	Response
	EnterRoomReq
	QuickEnterRoomReq
	RPCInfo
	ResultInfo
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 扑克牌值
type Face int32

const (
	Face_FaceDefault Face = 0
	Face_Two         Face = 2
	Face_Three       Face = 3
	Face_Four        Face = 4
	Face_Five        Face = 5
	Face_Six         Face = 6
	Face_Seven       Face = 7
	Face_Nine        Face = 9
	Face_Eight       Face = 8
	Face_Ten         Face = 10
	Face_Jack        Face = 11
	Face_Queen       Face = 12
	Face_King        Face = 13
	Face_Ace         Face = 14
)

var Face_name = map[int32]string{
	0:  "FaceDefault",
	2:  "Two",
	3:  "Three",
	4:  "Four",
	5:  "Five",
	6:  "Six",
	7:  "Seven",
	9:  "Nine",
	8:  "Eight",
	10: "Ten",
	11: "Jack",
	12: "Queen",
	13: "King",
	14: "Ace",
}
var Face_value = map[string]int32{
	"FaceDefault": 0,
	"Two":         2,
	"Three":       3,
	"Four":        4,
	"Five":        5,
	"Six":         6,
	"Seven":       7,
	"Nine":        9,
	"Eight":       8,
	"Ten":         10,
	"Jack":        11,
	"Queen":       12,
	"King":        13,
	"Ace":         14,
}

func (x Face) String() string {
	return proto.EnumName(Face_name, int32(x))
}
func (Face) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 扑克牌花型
type Suit int32

const (
	Suit_SuitDefault Suit = 0
	Suit_Diamonds    Suit = 1
	Suit_Clubs       Suit = 2
	Suit_Hearts      Suit = 3
	Suit_Spades      Suit = 4
)

var Suit_name = map[int32]string{
	0: "SuitDefault",
	1: "Diamonds",
	2: "Clubs",
	3: "Hearts",
	4: "Spades",
}
var Suit_value = map[string]int32{
	"SuitDefault": 0,
	"Diamonds":    1,
	"Clubs":       2,
	"Hearts":      3,
	"Spades":      4,
}

func (x Suit) String() string {
	return proto.EnumName(Suit_name, int32(x))
}
func (Suit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 扑克牌组合类型
type CardsType int32

const (
	// 普通牌型
	CardsType_CardsTypeDefault CardsType = 0
	CardsType_HighCard         CardsType = 2
	CardsType_Pair             CardsType = 3
	CardsType_TwoPair          CardsType = 4
	CardsType_ThreeOfKind      CardsType = 5
	CardsType_Straight         CardsType = 6
	CardsType_Flush            CardsType = 7
	CardsType_FullHouse        CardsType = 8
	CardsType_FourOfKind       CardsType = 9
	CardsType_StraightFlush    CardsType = 10
	CardsType_RoyalFlush       CardsType = 11
)

var CardsType_name = map[int32]string{
	0:  "CardsTypeDefault",
	2:  "HighCard",
	3:  "Pair",
	4:  "TwoPair",
	5:  "ThreeOfKind",
	6:  "Straight",
	7:  "Flush",
	8:  "FullHouse",
	9:  "FourOfKind",
	10: "StraightFlush",
	11: "RoyalFlush",
}
var CardsType_value = map[string]int32{
	"CardsTypeDefault": 0,
	"HighCard":         2,
	"Pair":             3,
	"TwoPair":          4,
	"ThreeOfKind":      5,
	"Straight":         6,
	"Flush":            7,
	"FullHouse":        8,
	"FourOfKind":       9,
	"StraightFlush":    10,
	"RoyalFlush":       11,
}

func (x CardsType) String() string {
	return proto.EnumName(CardsType_name, int32(x))
}
func (CardsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 扑克牌
type Card struct {
	Face Face `protobuf:"varint,1,opt,name=Face,enum=Face" json:"Face,omitempty"`
	Suit Suit `protobuf:"varint,2,opt,name=Suit,enum=Suit" json:"Suit,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Card) GetFace() Face {
	if m != nil {
		return m.Face
	}
	return Face_FaceDefault
}

func (m *Card) GetSuit() Suit {
	if m != nil {
		return m.Suit
	}
	return Suit_SuitDefault
}

// 牌组
type Cards struct {
	Cards []*Card `protobuf:"bytes,1,rep,name=Cards" json:"Cards,omitempty"`
}

func (m *Cards) Reset()                    { *m = Cards{} }
func (m *Cards) String() string            { return proto.CompactTextString(m) }
func (*Cards) ProtoMessage()               {}
func (*Cards) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Cards) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func init() {
	proto.RegisterType((*Card)(nil), "Card")
	proto.RegisterType((*Cards)(nil), "Cards")
	proto.RegisterEnum("Face", Face_name, Face_value)
	proto.RegisterEnum("Suit", Suit_name, Suit_value)
	proto.RegisterEnum("CardsType", CardsType_name, CardsType_value)
}

func init() { proto.RegisterFile("cards.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0x3d, 0x8f, 0xd3, 0x40,
	0x10, 0xc5, 0x5f, 0x49, 0x3c, 0xbe, 0x84, 0x61, 0x45, 0x91, 0x13, 0xcd, 0xe9, 0x44, 0x71, 0x4a,
	0xe1, 0x22, 0xb4, 0x34, 0x5c, 0x8e, 0x10, 0x71, 0x12, 0x1f, 0x71, 0x2a, 0xba, 0xb5, 0x3d, 0x97,
	0xac, 0xb0, 0xbd, 0x96, 0xd7, 0x7b, 0x47, 0x7e, 0x0a, 0x7f, 0x81, 0x92, 0x5f, 0x88, 0x66, 0x1d,
	0x82, 0xa8, 0x76, 0xde, 0x7b, 0xf3, 0x46, 0x6f, 0x46, 0x0b, 0x49, 0x21, 0xbb, 0xd2, 0xa4, 0x6d,
	0xa7, 0x7b, 0x7d, 0xfd, 0x16, 0xc2, 0x95, 0xec, 0x4a, 0x71, 0x09, 0xe1, 0x5a, 0x16, 0x34, 0xf7,
	0xae, 0xbc, 0x9b, 0xd9, 0x32, 0x4a, 0x19, 0x6c, 0x1d, 0xc5, 0x52, 0x66, 0x55, 0x3f, 0xf7, 0x4f,
	0x12, 0x83, 0xad, 0xa3, 0xae, 0x5f, 0x43, 0xc4, 0x6e, 0x23, 0x5e, 0x9d, 0x8a, 0xb9, 0x77, 0x15,
	0xdc, 0x24, 0xcb, 0x28, 0x65, 0xb4, 0x1d, 0xb8, 0xc5, 0x4f, 0x6f, 0x18, 0x2e, 0x9e, 0x43, 0xc2,
	0xef, 0x1d, 0x3d, 0x48, 0x5b, 0xf5, 0xf8, 0x4c, 0x8c, 0x21, 0xd8, 0x3d, 0x69, 0xf4, 0x45, 0x0c,
	0xd1, 0xee, 0xd0, 0x11, 0x61, 0x20, 0x26, 0x10, 0xae, 0xb5, 0xed, 0x30, 0x74, 0x95, 0x7a, 0x24,
	0x8c, 0xb8, 0x2f, 0x53, 0x3f, 0x70, 0xc4, 0x7d, 0x19, 0x3d, 0x52, 0x83, 0x63, 0x56, 0x3f, 0xa9,
	0x86, 0x30, 0x66, 0xf2, 0xbd, 0xda, 0x1f, 0x7a, 0x9c, 0xb8, 0x81, 0xd4, 0x20, 0xb0, 0xfa, 0x51,
	0x16, 0xdf, 0x31, 0x61, 0xf5, 0xab, 0x25, 0x6a, 0xf0, 0x82, 0xc9, 0x7b, 0xd5, 0xec, 0x71, 0xca,
	0x7d, 0xef, 0x0a, 0xc2, 0xd9, 0x62, 0x33, 0x2c, 0xc7, 0xd1, 0xf8, 0xfd, 0x17, 0xed, 0x02, 0x26,
	0x77, 0x4a, 0xd6, 0xba, 0x29, 0x0d, 0x7a, 0x3c, 0x64, 0x55, 0xd9, 0xdc, 0xa0, 0x2f, 0x00, 0x46,
	0x1b, 0x92, 0x5d, 0x6f, 0x30, 0xe0, 0x3a, 0x6b, 0x65, 0x49, 0x06, 0xc3, 0xc5, 0x6f, 0x0f, 0x62,
	0xb7, 0xef, 0xee, 0xd8, 0x92, 0x78, 0x09, 0x78, 0x06, 0xff, 0x0d, 0xdd, 0xa8, 0xfd, 0x81, 0x15,
	0xf4, 0x39, 0xce, 0x17, 0xa9, 0x3a, 0x0c, 0x44, 0x02, 0xe3, 0xdd, 0x93, 0x76, 0x20, 0xe4, 0x28,
	0xee, 0x16, 0x9f, 0x1f, 0xee, 0x55, 0x53, 0x62, 0xc4, 0xae, 0xac, 0xef, 0xa4, 0x5b, 0xd1, 0x9d,
	0x60, 0x5d, 0x59, 0x73, 0xc0, 0xb1, 0x98, 0x42, 0xbc, 0xb6, 0x55, 0xb5, 0xd1, 0xd6, 0x10, 0x4e,
	0xc4, 0x0c, 0x80, 0x2f, 0x77, 0xf2, 0xc5, 0xe2, 0x05, 0x4c, 0xff, 0xfa, 0x06, 0x07, 0x70, 0xcb,
	0x56, 0x1f, 0x65, 0x35, 0xe0, 0xe4, 0x76, 0x09, 0x58, 0xe8, 0x3a, 0xcd, 0xa5, 0x3a, 0xaa, 0xbd,
	0xac, 0x29, 0x6d, 0xf3, 0x6f, 0x7e, 0x9b, 0xff, 0xf2, 0x2f, 0x57, 0xba, 0x4e, 0x6f, 0xcf, 0xf4,
	0x07, 0x5d, 0x36, 0xd4, 0xa7, 0x2b, 0x5d, 0xd7, 0xf9, 0xc8, 0xfd, 0x9c, 0x37, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xac, 0x90, 0x09, 0xa8, 0x48, 0x02, 0x00, 0x00,
}
