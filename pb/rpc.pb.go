// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RPCInfo struct {
	Cid      string   `protobuf:"bytes,1,opt,name=Cid" json:"Cid,omitempty"`
	Fn       string   `protobuf:"bytes,2,opt,name=Fn" json:"Fn,omitempty"`
	ReplyTo  string   `protobuf:"bytes,3,opt,name=ReplyTo" json:"ReplyTo,omitempty"`
	Track    string   `protobuf:"bytes,4,opt,name=track" json:"track,omitempty"`
	Expired  int64    `protobuf:"varint,5,opt,name=Expired" json:"Expired,omitempty"`
	Reply    bool     `protobuf:"varint,6,opt,name=Reply" json:"Reply,omitempty"`
	ArgsType []string `protobuf:"bytes,7,rep,name=ArgsType" json:"ArgsType,omitempty"`
	Args     [][]byte `protobuf:"bytes,8,rep,name=Args,proto3" json:"Args,omitempty"`
}

func (m *RPCInfo) Reset()                    { *m = RPCInfo{} }
func (m *RPCInfo) String() string            { return proto.CompactTextString(m) }
func (*RPCInfo) ProtoMessage()               {}
func (*RPCInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *RPCInfo) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *RPCInfo) GetFn() string {
	if m != nil {
		return m.Fn
	}
	return ""
}

func (m *RPCInfo) GetReplyTo() string {
	if m != nil {
		return m.ReplyTo
	}
	return ""
}

func (m *RPCInfo) GetTrack() string {
	if m != nil {
		return m.Track
	}
	return ""
}

func (m *RPCInfo) GetExpired() int64 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *RPCInfo) GetReply() bool {
	if m != nil {
		return m.Reply
	}
	return false
}

func (m *RPCInfo) GetArgsType() []string {
	if m != nil {
		return m.ArgsType
	}
	return nil
}

func (m *RPCInfo) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

type ResultInfo struct {
	Cid        string `protobuf:"bytes,1,opt,name=Cid" json:"Cid,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	ResultType string `protobuf:"bytes,4,opt,name=ResultType" json:"ResultType,omitempty"`
	Result     []byte `protobuf:"bytes,5,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (m *ResultInfo) Reset()                    { *m = ResultInfo{} }
func (m *ResultInfo) String() string            { return proto.CompactTextString(m) }
func (*ResultInfo) ProtoMessage()               {}
func (*ResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *ResultInfo) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *ResultInfo) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ResultInfo) GetResultType() string {
	if m != nil {
		return m.ResultType
	}
	return ""
}

func (m *ResultInfo) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*RPCInfo)(nil), "rpcpb.RPCInfo")
	proto.RegisterType((*ResultInfo)(nil), "rpcpb.ResultInfo")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xd9, 0x6c, 0xf3, 0x6f, 0x28, 0x22, 0x43, 0x91, 0xc1, 0x83, 0x2c, 0x3d, 0xed, 0xc9,
	0x8b, 0x4f, 0x20, 0xa5, 0x05, 0x6f, 0x32, 0xf4, 0x05, 0x6c, 0x1a, 0xa5, 0x18, 0xb2, 0xcb, 0x34,
	0x82, 0x7d, 0x36, 0x5f, 0x4e, 0x32, 0x9b, 0x88, 0x97, 0xde, 0xbe, 0xdf, 0x8f, 0x19, 0xf6, 0xdb,
	0x81, 0x5a, 0x62, 0xf3, 0x18, 0x25, 0x0c, 0x01, 0x73, 0x89, 0x4d, 0x3c, 0xac, 0x7f, 0x0c, 0x94,
	0xfc, 0xba, 0x79, 0xe9, 0xdf, 0x03, 0xde, 0x82, 0xdd, 0x9c, 0x8e, 0x64, 0x9c, 0xf1, 0x35, 0x8f,
	0x11, 0x6f, 0x20, 0xdb, 0xf5, 0x94, 0xa9, 0xc8, 0x76, 0x3d, 0x12, 0x94, 0xdc, 0xc6, 0xee, 0xb2,
	0x0f, 0x64, 0x55, 0xce, 0x88, 0x2b, 0xc8, 0x07, 0x79, 0x6b, 0x3e, 0x69, 0xa1, 0x3e, 0xc1, 0x38,
	0xbf, 0xfd, 0x8e, 0x27, 0x69, 0x8f, 0x94, 0x3b, 0xe3, 0x2d, 0xcf, 0x38, 0xce, 0xeb, 0x2a, 0x15,
	0xce, 0xf8, 0x8a, 0x13, 0xe0, 0x3d, 0x54, 0xcf, 0xf2, 0x71, 0xde, 0x5f, 0x62, 0x4b, 0xa5, 0xb3,
	0xbe, 0xe6, 0x3f, 0x46, 0x84, 0xc5, 0x98, 0xa9, 0x72, 0xd6, 0x2f, 0x59, 0xf3, 0xba, 0x03, 0xe0,
	0xf6, 0xfc, 0xd5, 0x0d, 0x57, 0xfa, 0xaf, 0x20, 0xdf, 0x8a, 0x04, 0x99, 0xbe, 0x90, 0x00, 0x1f,
	0xe6, 0x2d, 0x7d, 0x27, 0x15, 0xfe, 0x67, 0xf0, 0x0e, 0x8a, 0x44, 0x5a, 0x7a, 0xc9, 0x13, 0x1d,
	0x0a, 0xbd, 0xdc, 0xd3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x0b, 0xf9, 0x1f, 0x46, 0x01,
	0x00, 0x00,
}
